package DGU;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

// Fruits 클래스: 과일의 이름, 가격 및 이미지 정보를 저장
class Fruits {
    private String name; // 과일의 이름
    private int price; // 과일의 가격
    private ImageIcon image; // 과일의 이미지

    // 생성자: 이름과 가격을 받아 과일 객체를 생성
    Fruits(String n, int p) {
        name = n;
        price = p;
        image = new ImageIcon("c:\\Q202\\images\\" + name + ".png"); // 이미지 경로 설정
    }

    // 과일 이름을 반환하는 메서드
    String getFName() {
        return name;
    }

    // 과일 가격을 반환하는 메서드
    int getFPrice() {
        return price;
    }

    // 과일 이미지를 반환하는 메서드
    ImageIcon getImage() {
        return image;
    }
}

// 메인 프레임 클래스
public class Grade_2019111679_022_2 extends JFrame {
    private int w, h; // 창의 너비와 높이
    private Container c = getContentPane(); // 컨테이너
    private ArrayList<Fruits> fruitsList = new ArrayList<>(); // 과일 목록

    // 생성자: 기본 설정
    public Grade_2019111679_022_2() {
        w = 300;
        h = 300;
        setTitle("확장"); // 창 제목
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // 종료 조건
        c.add(new Panel1(this), BorderLayout.CENTER); // 첫 번째 패널 추가
        setSize(w, h); // 창 크기 설정
        setVisible(true); // 창 보이기
    }

    // 패널 변경 메서드
    public void changePanel(JPanel panel) {
        c.removeAll(); // 모든 컴포넌트 제거
        c.add(panel, BorderLayout.CENTER); // 새로운 패널 추가
        c.revalidate(); // 레이아웃 재검증
        c.repaint(); // 다시 그리기
    }

    // 과일 목록을 반환하는 메서드
    public ArrayList<Fruits> getFruitsList() {
        return fruitsList;
    }

    public static void main(String[] args) {
        new Grade_2019111679_022_2(); // 애플리케이션 시작
    }
}

// Panel1 클래스: 과일 개수를 입력받는 패널
class Panel1 extends JPanel {
    Panel1(final Grade_2019111679_022_2 frame) {
        setLayout(new GridLayout(3, 1)); // 레이아웃 설정
        add(new JLabel("과일의 개수를 입력하세요")); // 레이블 추가

        final JTextField numberField = new JTextField(); // 텍스트 필드 추가
        add(numberField);

        JButton confirmButton = new JButton("확인"); // 확인 버튼
        confirmButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int size = Integer.parseInt(numberField.getText()); // 입력된 과일 개수 읽기
                frame.changePanel(new Panel2(frame, size)); // Panel2로 패널 변경
            }
        });
        add(confirmButton); // 버튼 추가
    }
}

class Panel2 extends JPanel {
    private ArrayList<JTextField> nameFields = new ArrayList<>();
    private ArrayList<JTextField> priceFields = new ArrayList<>();
    private ArrayList<JLabel> nameLabels = new ArrayList<>(); // 과일 이름 레이블 리스트 추가
    private ArrayList<JLabel> priceLabels = new ArrayList<>(); // 과일 가격 레이블 리스트 추가
    private JPanel fieldsPanel;

    Panel2(final Grade_2019111679_022_2 frame, int initialSize) {
        setLayout(new BorderLayout());

        fieldsPanel = new JPanel();
        fieldsPanel.setLayout(new GridLayout(0, 2));
        JScrollPane scrollPane = new JScrollPane(fieldsPanel);

        for (int i = 0; i < initialSize; i++) {
            addFruitField();
        }

        JButton addButton = new JButton("과일 추가");
        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                addFruitField();
            }
        });

        JButton removeButton = new JButton("과일 제거");
        removeButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                removeFruitField();
            }
        });

        JButton confirmButton = new JButton("확인");
        confirmButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                frame.getFruitsList().clear();
                for (int i = 0; i < nameFields.size(); i++) {
                    String name = nameFields.get(i).getText();
                    int price;
                    try {
                        price = Integer.parseInt(priceFields.get(i).getText());
                    } catch (NumberFormatException nfe) {
                        price = 0; // or handle error
                    }
                    frame.getFruitsList().add(new Fruits(name, price));
                }
                frame.changePanel(new Panel3(frame.getFruitsList()));
            }
        });

        JPanel buttonPanel = new JPanel();
        buttonPanel.add(addButton);
        buttonPanel.add(removeButton);
        buttonPanel.add(confirmButton);

        add(scrollPane, BorderLayout.CENTER);
        add(buttonPanel, BorderLayout.SOUTH);
    }

    private void addFruitField() {
        JTextField nameField = new JTextField();
        JTextField priceField = new JTextField();
        nameFields.add(nameField);
        priceFields.add(priceField);

        JLabel nameLabel = new JLabel("과일 이름:"); // 과일 이름 레이블 생성
        JLabel priceLabel = new JLabel("과일 가격:"); // 과일 가격 레이블 생성
        nameLabels.add(nameLabel); // 리스트에 추가
        priceLabels.add(priceLabel); // 리스트에 추가

        fieldsPanel.add(nameLabel);
        fieldsPanel.add(nameField);
        fieldsPanel.add(priceLabel);
        fieldsPanel.add(priceField);
        fieldsPanel.revalidate();
        fieldsPanel.repaint();
    }

    private void removeFruitField() {
        int index = nameFields.size() - 1;
        if (index >= 0) {
            fieldsPanel.remove(nameLabels.remove(index)); // 과일 이름 레이블 제거
            fieldsPanel.remove(nameFields.remove(index)); // 과일 이름 텍스트필드 제거
            fieldsPanel.remove(priceLabels.remove(index)); // 과일 가격 레이블 제거
            fieldsPanel.remove(priceFields.remove(index)); // 과일 가격 텍스트필드 제거
            fieldsPanel.revalidate();
            fieldsPanel.repaint();
        }
    }
}

class Panel3 extends JPanel {
    private JLabel showImage;
    private JLabel showPrice;

    Panel3(ArrayList<Fruits> fruits) {
        setLayout(new BorderLayout());
        JPanel radioPanel = new JPanel(new GridLayout(1, 0)); // 1행으로 모든 라디오 버튼을 가로로 나열
        ButtonGroup group = new ButtonGroup();
        showImage = new JLabel("", SwingConstants.CENTER);
        showPrice = new JLabel("과일을 선택하세요.", SwingConstants.CENTER);
        transformImageSize trans = new transformImageSize(); // 인스턴스 생성

        for (int i = 0; i < fruits.size(); i++) {
            Fruits fruit = fruits.get(i);
            JRadioButton button = new JRadioButton(fruit.getFName());
            button.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    ImageIcon icon = fruit.getImage();
                    if (icon.getIconWidth() == -1) {
                        // 이미지를 찾지 못했을 경우의 처리
                        showImage.setIcon(null);
                        showPrice.setText("이미지를 찾지 못했습니다.");
                    } else {
                        // 이미지 크기 변환
                        icon = trans.transformImageSize(icon, 200, 200);
                        showImage.setIcon(icon);
                        showPrice.setText(fruit.getFName() + "의 가격은 " + fruit.getFPrice() + "원 입니다.");
                    }
                }
            });
            group.add(button);
            radioPanel.add(button);
        }

        JScrollPane radioScrollPane = new JScrollPane(radioPanel);
        radioScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        radioScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);

        add(radioScrollPane, BorderLayout.NORTH);
        add(showImage, BorderLayout.CENTER);
        add(showPrice, BorderLayout.SOUTH);
    }
}